--- /dev/null
+++ BUILD.bazel
@@ -0,0 +1,214 @@
+
+COMMON_HDRS = [
+    "include/GLFW/glfw3.h",
+    "include/GLFW/glfw3native.h",
+    "src/internal.h",
+    "src/platform.h",
+    "src/mappings.h",
+    "src/null_platform.h",
+    "src/null_joystick.h",
+]
+
+COMMON_SRCS = [
+    "src/context.c",
+    "src/init.c",
+    "src/input.c",
+    "src/monitor.c",
+    "src/platform.c",
+    "src/vulkan.c",
+    "src/window.c",
+    "src/egl_context.c",
+    "src/osmesa_context.c",
+    "src/null_init.c",
+    "src/null_monitor.c",
+    "src/null_window.c",
+    "src/null_joystick.c",
+]
+
+######################
+# Linux
+######################
+LINUX_DEFINES = []
+
+LINUX_HDRS = [
+    "src/posix_time.h",
+    "src/posix_thread.h",
+]
+
+LINUX_SRCS = [
+    "src/posix_module.c",
+    "src/posix_time.c",
+    "src/posix_thread.c",
+]
+
+LINUX_LINKOPTS = []
+
+LINUX_X11_HDRS = [
+    "src/x11_platform.h",
+    "src/xkb_unicode.h"
+]
+LINUX_X11_SRCS = [
+    "src/x11_init.c",
+    "src/x11_monitor.c",
+    "src/x11_window.c",
+    "src/xkb_unicode.c",
+    "src/glx_context.c",
+]
+LINUX_X11_DEFINES = ["_GLFW_X11"]
+
+LINUX_DEFINES += LINUX_X11_DEFINES
+LINUX_HDRS += LINUX_X11_HDRS + ['src/linux_joystick.h', 'src/posix_poll.h']
+LINUX_SRCS += LINUX_X11_SRCS + ['src/linux_joystick.c', 'src/posix_poll.c']
+
+
+######################
+# Windows
+######################
+WIN32_DEFINES = []
+
+WIN32_HDRS = [
+    "src/win32_time.h",
+    "src/win32_thread.h",
+]
+
+WIN32_SRCS = [
+    "src/win32_module.c",
+    "src/win32_time.c",
+    "src/win32_thread.c",
+]
+
+WIN32_LINKOPTS = [
+    "-DEFAULTLIB:user32.lib",
+    "-DEFAULTLIB:gdi32.lib",
+    "-DEFAULTLIB:shell32.lib",
+]
+
+WIN32_GLFW_BUILD_HDRS = [
+    "src/win32_platform.h",
+    "src/win32_joystick.h"
+]
+
+WIN32_GLFW_BUILD_SRCS = [
+    "src/win32_init.c",
+    "src/win32_joystick.c",
+    "src/win32_monitor.c",
+    "src/win32_window.c",
+    "src/wgl_context.c",
+]
+
+WIN32_GLFW_DEFINES = [
+    "_GLFW_WIN32",
+]
+
+WIN32_HDRS += WIN32_GLFW_BUILD_HDRS
+WIN32_SRCS += WIN32_GLFW_BUILD_SRCS
+WIN32_DEFINES += WIN32_GLFW_DEFINES
+
+
+######################
+# Mac
+######################
+MAC_DEFINES = []
+
+MAC_HDRS = [
+    "src/cocoa_time.h",
+    "src/posix_thread.h",
+]
+
+MAC_SRCS = [
+    "src/cocoa_time.c",
+    "src/posix_module.c",
+    "src/posix_thread.c",
+]
+
+MAC_LINKOPTS = [
+    "-framework", "Cocoa",
+    "-framework", "IOKit",
+    "-framework", "CoreFoundation",
+]
+
+MAC_COCOA_HDRS = [
+    "src/cocoa_platform.h",
+    "src/cocoa_joystick.h",
+]
+
+MAC_COCOA_SRCS = [
+    "src/cocoa_init.m",
+    "src/cocoa_joystick.m",
+    "src/cocoa_monitor.m",
+    "src/cocoa_window.m",
+    "src/nsgl_context.m",
+]
+
+MAC_GLFW_DEFINES = [
+    "_GLFW_COCOA",
+]
+
+MAC_HDRS += MAC_COCOA_HDRS
+MAC_SRCS += MAC_COCOA_SRCS
+MAC_DEFINES += MAC_GLFW_DEFINES
+
+
+
+######################
+# Bundle
+######################
+objc_library(
+    name = "glfw_src_mac",
+    srcs = COMMON_SRCS + MAC_SRCS,
+    hdrs = COMMON_HDRS + MAC_HDRS,
+    copts = select({
+		"@bazel_tools//src/conditions:darwin": ["-fno-objc-arc", "-Wno-pedantic", "-Wno-unused-command-line-argument"],
+        "@bazel_tools//src/conditions:windows": [],
+        "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": [],
+    }),
+    tags = ["manual"],  # This makes it so the other platforms will still build OK
+    includes = ["include", "src"],
+    defines = MAC_DEFINES,
+)
+
+cc_library(
+    name = "glfw_src",
+    hdrs = COMMON_HDRS + select({
+		"@bazel_tools//src/conditions:darwin": [],
+		"@bazel_tools//src/conditions:windows": WIN32_HDRS,
+		"@rules_bzlmodrio_toolchains//constraints/combined:is_linux": LINUX_HDRS,
+	}),
+    srcs = COMMON_SRCS + select({
+		"@bazel_tools//src/conditions:darwin": [],
+		"@bazel_tools//src/conditions:windows": WIN32_SRCS,
+		"@rules_bzlmodrio_toolchains//constraints/combined:is_linux": LINUX_SRCS,
+	}),
+    defines = select({
+		"@bazel_tools//src/conditions:darwin": MAC_DEFINES,
+		"@bazel_tools//src/conditions:windows": WIN32_DEFINES,
+		"@rules_bzlmodrio_toolchains//constraints/combined:is_linux": LINUX_DEFINES,
+	}),
+    deps = select({
+        "@bazel_tools//src/conditions:darwin": [":glfw_src_mac"],
+        "//conditions:default": [],
+    }),
+    copts = select({
+		"@bazel_tools//src/conditions:darwin": ["-Wno-pedantic", "-Wno-sign-compare"],
+        "@bazel_tools//src/conditions:windows": [],
+        "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": ["-Wno-pedantic", "-Wno-sign-compare", "-Wno-missing-field-initializers"],
+    }),
+    includes = ["include", "src"],
+)
+
+cc_library(
+    name = "glfw",
+    hdrs = [
+        "include/GLFW/glfw3.h",
+        "include/GLFW/glfw3native.h",
+    ],
+    linkopts = select({
+		"@bazel_tools//src/conditions:darwin": MAC_LINKOPTS,
+		"@bazel_tools//src/conditions:windows": WIN32_LINKOPTS,
+		"@rules_bzlmodrio_toolchains//constraints/combined:is_linux": LINUX_LINKOPTS,
+	}),
+    deps = [":glfw_src"],
+    includes = ["include"],
+    strip_include_prefix = "include",
+    visibility = ["//visibility:public"],
+)
